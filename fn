#!/ /hint/sh

# song=_song
##TMP?
_song() { [ -t 0 -a -t 1 ] || return 1; ( set -f ; IFS='~';
	for i in $( \song | sed --null-data 's/\n\n/\x0/g' | shuf -z | tr \\0 \~ ); do
		echo "$i" | \
		sed -E 's/(\w)\s*$/\1 /g' | \
		\tt -showwpm -noskip -oneshot -raw -oneshot || break
	done
) }




# pwd=_pwd_
_pwd_() {
	case $1 in
		-z) shift; fori{{ printf %s\\0 "$PWD/$i"; }};;
		''|-*|-[LP]) \pwd;;
		*) fori{{ echo-1l "$PWD/$i"; }};;
	esac
}



# command. env_split || # better use external command
# alias env:=env_split
# env_split() {( IFS=: eval 'printf %s\\n $'"$*"; )}

# ll.parents='_ll_parents	'



# set-x='_set_x'
_set_x() { (
	com=$1; shift
	if compath=$(command -v "$com") && [ -x "$compath" ]; then
		arg "compath" "$@"
		bash -x "$compath" "$@";
	else
		set -x; eval "$com ${@:+"\"\$@\""}"  #"fix
		# $ "set -x; $@"
	fi
) }

delayed_first_stdin() { ( set -eu
	# todo! fix when: delayed_first_stdin $ grep .
	i=''
	IFS= read -r i
	{ printf %s\\n "$i"; cat; } | "${@:?}"
) }



history_current_command() {
		local i
		i=$(
			set -fu; IFS=;
			history | {
				r=''
				while read -r i; do r=$i; done
				echo-1l "$r"
			}
		)

		# handle format s/^ *[0-9]* *//
		i=${i#"${i%%[! ]*}"}   # trim start spaces
		i=${i#"${i%%[!0-9]*}"} # trim start digits
		i=${i#"${i%%[! ]*}"}   # trim start spaces (again)

		# Not needed: case $# in 1) i=${};; 0) ;; *) err .....
		i=${i#"$1"}
		# i=${i#"${i%%[! ]*}"}   # trim start spaces (again x2) just in case

		echo-1l "$i"
}

alias song=_song pwd=_pwd_  +='_plus_' ll.parents='_ll_parents' set-x='_set_x'
